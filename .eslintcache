[{"/Users/alex/Desktop/Projects/mad-libzz/src/index.js":"1","/Users/alex/Desktop/Projects/mad-libzz/src/App.js":"2"},{"size":218,"mtime":1609165910000,"results":"3","hashOfConfig":"4"},{"size":1345,"mtime":1609814196000,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"8"},"jasw72",{"filePath":"9","messages":"10","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/alex/Desktop/Projects/mad-libzz/src/index.js",[],["11","12"],"/Users/alex/Desktop/Projects/mad-libzz/src/App.js",["13","14"],{"ruleId":"15","replacedBy":"16"},{"ruleId":"17","replacedBy":"18"},{"ruleId":"19","severity":1,"message":"20","line":6,"column":11,"nodeType":"21","messageId":"22","endLine":6,"endColumn":17},{"ruleId":"23","severity":1,"message":"24","line":9,"column":13,"nodeType":"25","endLine":15,"endColumn":4},"no-native-reassign",["26"],"no-negated-in-lhs",["27"],"no-unused-vars","'values' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","no-global-assign","no-unsafe-negation"]